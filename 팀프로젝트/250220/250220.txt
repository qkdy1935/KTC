java 정규표현식

1. test() : 정규표현식의 패턴과 일치하는지 여부를 논리형값으로 반환시켜주는 메서즈 함수

2. match() : 정규표현식 패턴과 일치하는 값을 찾아주는 메서드 함수

3. replace() : 문자열 가운데 정규표현식 패턴에 일치하는 문자열을 찾아서 새로운 문자열로 대체해주는 메서드 함수

* 정규표현식의 주요 플래그

1. i : internationl의 약어, 영문의 대, 소문자를 구별하지 않고 문자열을 찾고 싶을 떄

2. g :  global  문자열 가운데 사전에 사전에 정의한 패턴과 일치하는 모든 요소를 찾아오고 싶울때 
// 만약 g를 사용하지 않는다면, 좌측부터 시작되는 문자열 가운데 가장 먼저 찾아낸 요소만 반환합니다.


3. m : 문자열의 행이 바뀌어도 검색 가능 


정규표현식의 주요 클래스

1.  d : 0~9사이의 숫자
2.  D : 숫자가 아닌 모든 문자
3.  s : 공백 , 탭 , 줄바꿈 등을 찾아오고 싶을떄
4.  S : 공백이 아닌 문자
5.  w : 단어에 들어가는 개별문자
6.  W : 단어에 들어가지 않는 모든 문자열

정규표현식의 특수 문자

1. ^ (*캐럿)  :  특정 문자로 시작하는 문자열 
2.  $ (*달러)  :  특정 문자로 끝나는 문자열

* 정규표현식의 범위설정
[범위입력] => 해당 범위에 속하는 값들을 찾아서 배열의 형태로 변환

* 정규표현식의 반복검색


1. 숫자만 허용:

const number = /^[0-9]+$/;
설명: 숫자만 포함된 문자열을 검증합니다. 0-9 범위의 숫자가 하나 이상 연속해서 나오는 경우에만 일치합니다.
예시:
"1234" → 일치 (허용됨)
"abc123" → 일치하지 않음
"1234 " → 일치하지 않음 (공백 포함)

2. 양의 정수만 허용:

const postive = /^[1-9]\d+$/;
설명: 1-9로 시작하고, 그 뒤에 1개 이상의 숫자가 오는 형태의 양의 정수를 검증합니다. 즉, 0은 허용되지 않으며, 반드시 1 이상이어야 합니다.
예시:
"1" → 일치 (허용됨)
"10" → 일치 (허용됨)
"0" → 일치하지 않음
"012" → 일치하지 않음 (앞에 0이 있음)

